import numpy as np
def f(x,delta):

    f = [0,
         (-x[0] + 0.9) ** 2 + (-x[1] + 0.5) ** 2 + (-x[2] - x[66] + 0.75) ** 2 - 0.1075,
         (-x[5] + 0.9) ** 2 + (-x[6] + 0.5) ** 2 + (-x[7] + 0.75) ** 2 - 0.1075,
         (-x[26] + 0.35) ** 2 + (-x[27] + 0.5) ** 2 + (-x[28] + 0.75) ** 2 - 0.1075,
         (-x[17] + 0.35) ** 2 + (-x[18] + 0.5) ** 2 + (-x[19] + 0.75) ** 2 - 0.1075,
         (x[41] - x[53]) ** 2 + (x[42] - x[54]) ** 2 + (x[43] - x[55]) ** 2 - 0.3025,
         (x[35] - x[41]) ** 2 + (x[36] - x[42]) ** 2 + (x[37] - x[43]) ** 2 - 0.1075,
         (x[26] - x[53]) ** 2 + (x[27] - x[54]) ** 2 + (x[28] - x[55]) ** 2 - 0.1075,
         (x[17] - x[53]) ** 2 + (x[19] - x[55]) ** 2 + (x[18] - x[54] - x[65]) ** 2 - 0.1075,
         (-x[38] + x[41]) ** 2 + (-x[39] + x[42] + x[65]) ** 2 + (-x[40] + x[43] - x[66]) ** 2 - 0.1075,
         (x[17] - x[23]) ** 2 + (x[18] - x[24]) ** 2 + (x[19] - x[25]) ** 2 - 0.3025,
         (x[10] - x[25]) ** 2 + (-x[23] + x[8]) ** 2 + (-x[24] + x[9]) ** 2 - 0.1075,
         (x[23] - x[50]) ** 2 + (x[24] - x[51]) ** 2 + (x[25] - x[52]) ** 2 - 0.1075,
         (-x[10] + x[7]) ** 2 + (x[5] - x[8]) ** 2 + (x[6] - x[9]) ** 2 - 0.3025,
         (x[10] - x[64]) ** 2 + (-x[63] + x[9]) ** 2 + (-delta - x[62] + x[8]) ** 2 - 0.1075,
         (x[3] - x[5]) ** 2 + (x[4] - x[7]) ** 2 + (-x[6] + 0.5) ** 2 - 0.1075,
         (x[0] - x[11]) ** 2 + (-x[12] + x[1]) ** 2 + (-x[13] + x[2]) ** 2 - 0.3025,
         (x[0] - x[3]) ** 2 + (x[1] - 0.5) ** 2 + (x[2] - x[4]) ** 2 - 0.1075,
         (x[11] - x[29]) ** 2 + (x[12] - x[30]) ** 2 + (x[13] - x[31]) ** 2 - 0.1075,
         (x[20] - x[62]) ** 2 + (x[21] - x[63]) ** 2 + (x[22] - x[64]) ** 2 - 0.3025,
         (x[14] - x[20]) ** 2 + (x[15] - x[21]) ** 2 + (x[16] - x[22]) ** 2 - 0.1075,
         (x[50] - x[62]) ** 2 + (x[51] - x[63]) ** 2 + (x[52] - x[64]) ** 2 - 0.1075,
         (-x[22] + x[49]) ** 2 + (-delta - x[20] + x[47]) ** 2 + (-x[21] + x[48] + x[65]) ** 2 - 0.1075,
         (x[35] - x[50]) ** 2 + (x[37] - x[52]) ** 2 + (x[36] - x[51] + x[65]) ** 2 - 0.3025,
         (x[32] - x[35]) ** 2 + (x[33] - x[36]) ** 2 + (x[34] - x[37]) ** 2 - 0.1075,
         (x[33] - x[48]) ** 2 + (x[34] - x[49]) ** 2 + (delta + x[32] - x[47]) ** 2 - 0.3025,
         (-x[48] + x[57]) ** 2 + (-x[49] + x[58]) ** 2 + (delta - x[47] + x[56]) ** 2 - 0.1075,
         (x[12] - x[60]) ** 2 + (-delta + x[11] - x[59]) ** 2 + (x[13] - x[61] + x[66]) ** 2 - 0.1075,
         (x[56] - x[59]) ** 2 + (x[57] - x[60]) ** 2 + (x[58] - x[61] + x[66]) ** 2 - 0.3025,
         (x[44] - x[59]) ** 2 + (x[45] - x[60]) ** 2 + (x[46] - x[61] + x[66]) ** 2 - 0.1075,
         (x[14] - x[56]) ** 2 + (x[15] - x[57]) ** 2 + (x[16] - x[58]) ** 2 - 0.1075,
         (-x[32] + x[38]) ** 2 + (-x[34] + x[40]) ** 2 + (-x[33] + x[39] - x[65]) ** 2 - 0.1075,
         (x[38] - x[44]) ** 2 + (x[40] - x[46]) ** 2 + (x[39] - x[45] - x[65]) ** 2 - 0.3025,
         (x[29] - x[44]) ** 2 + (x[30] - x[45]) ** 2 + (x[31] - x[46]) ** 2 - 0.1075,
         (x[26] - x[29]) ** 2 + (x[27] - x[30]) ** 2 + (x[28] - x[31] - x[66]) ** 2 - 0.3025,
         (-x[15] + 0.5) ** 2 + (-x[16] + x[4]) ** 2 + (-delta - x[14] + x[3]) ** 2 - 0.3025]

    return f

def df(x,delta):

    df = [
        [0, 2 * x[0] - 1.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[0] - 2 * x[11], 2 * x[0] - 2 * x[3], 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2 * x[1] - 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[12] + 2 * x[1], 2 * x[1] - 1.0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2 * x[2] + 2 * x[66] - 1.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[13] + 2 * x[2],
         2 * x[2] - 2 * x[4], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[3] - 2 * x[5], 0, -2 * x[0] + 2 * x[3], 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * delta - 2 * x[14] + 2 * x[3]],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[4] - 2 * x[7], 0, -2 * x[2] + 2 * x[4], 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[16] + 2 * x[4]],
        [0, 0, 2 * x[5] - 1.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[5] - 2 * x[8], 0, -2 * x[3] + 2 * x[5], 0, 0, 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2 * x[6] - 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[6] - 2 * x[9], 0, 2 * x[6] - 1.0, 0, 0, 0, 0, 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2 * x[7] - 1.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[10] + 2 * x[7], 0, -2 * x[4] + 2 * x[7], 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[23] + 2 * x[8], 0, -2 * x[5] + 2 * x[8],
         -2 * delta - 2 * x[62] + 2 * x[8],
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[24] + 2 * x[9], 0, -2 * x[6] + 2 * x[9], -2 * x[63] + 2 * x[9], 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[10] - 2 * x[25], 0, 2 * x[10] - 2 * x[7], 2 * x[10] - 2 * x[64], 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[0] + 2 * x[11], 0, 2 * x[11] - 2 * x[29], 0, 0, 0, 0, 0,
         0,
         0, 0, -2 * delta + 2 * x[11] - 2 * x[59], 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[12] - 2 * x[1], 0, 2 * x[12] - 2 * x[30], 0, 0, 0, 0, 0,
         0,
         0, 0, 2 * x[12] - 2 * x[60], 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[13] - 2 * x[2], 0, 2 * x[13] - 2 * x[31], 0, 0, 0, 0, 0,
         0,
         0, 0, 2 * x[13] - 2 * x[61] + 2 * x[66], 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[14] - 2 * x[20], 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * x[14] - 2 * x[56], 0, 0, 0, 0, 2 * delta + 2 * x[14] - 2 * x[3]],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[15] - 2 * x[21], 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * x[15] - 2 * x[57], 0, 0, 0, 0, 2 * x[15] - 1.0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[16] - 2 * x[22], 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * x[16] - 2 * x[58], 0, 0, 0, 0, 2 * x[16] - 2 * x[4]],
        [0, 0, 0, 0, 2 * x[17] - 0.7, 0, 0, 0, 2 * x[17] - 2 * x[53], 0, 2 * x[17] - 2 * x[23], 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 2 * x[18] - 1.0, 0, 0, 0, 2 * x[18] - 2 * x[54] - 2 * x[65], 0, 2 * x[18] - 2 * x[24], 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 2 * x[19] - 1.5, 0, 0, 0, 2 * x[19] - 2 * x[55], 0, 2 * x[19] - 2 * x[25], 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[20] - 2 * x[62], -2 * x[14] + 2 * x[20], 0,
         2 * delta + 2 * x[20] - 2 * x[47], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[21] - 2 * x[63], -2 * x[15] + 2 * x[21], 0,
         2 * x[21] - 2 * x[48] - 2 * x[65], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[22] - 2 * x[64], -2 * x[16] + 2 * x[22], 0,
         2 * x[22] - 2 * x[49], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[17] + 2 * x[23], 2 * x[23] - 2 * x[8], 2 * x[23] - 2 * x[50], 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[18] + 2 * x[24], 2 * x[24] - 2 * x[9], 2 * x[24] - 2 * x[51], 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[19] + 2 * x[25], -2 * x[10] + 2 * x[25], 2 * x[25] - 2 * x[52], 0, 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 2 * x[26] - 0.7, 0, 0, 0, 2 * x[26] - 2 * x[53], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 2 * x[26] - 2 * x[29], 0],
        [0, 0, 0, 2 * x[27] - 1.0, 0, 0, 0, 2 * x[27] - 2 * x[54], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 2 * x[27] - 2 * x[30], 0],
        [0, 0, 0, 2 * x[28] - 1.5, 0, 0, 0, 2 * x[28] - 2 * x[55], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 2 * x[28] - 2 * x[31] - 2 * x[66], 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[11] + 2 * x[29], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 2 * x[29] - 2 * x[44], -2 * x[26] + 2 * x[29], 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[12] + 2 * x[30], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 2 * x[30] - 2 * x[45], -2 * x[27] + 2 * x[30], 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[13] + 2 * x[31], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 2 * x[31] - 2 * x[46], -2 * x[28] + 2 * x[31] + 2 * x[66], 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[32] - 2 * x[35],
         2 * delta + 2 * x[32] - 2 * x[47], 0, 0, 0, 0, 0, 2 * x[32] - 2 * x[38], 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[33] - 2 * x[36],
         2 * x[33] - 2 * x[48], 0, 0, 0, 0, 0, 2 * x[33] - 2 * x[39] + 2 * x[65], 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[34] - 2 * x[37],
         2 * x[34] - 2 * x[49], 0, 0, 0, 0, 0, 2 * x[34] - 2 * x[40], 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2 * x[35] - 2 * x[41], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[35] - 2 * x[50],
         -2 * x[32] + 2 * x[35], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2 * x[36] - 2 * x[42], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * x[36] - 2 * x[51] + 2 * x[65], -2 * x[33] + 2 * x[36], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2 * x[37] - 2 * x[43], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[37] - 2 * x[52],
         -2 * x[34] + 2 * x[37], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[38] - 2 * x[41], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         -2 * x[32] + 2 * x[38], 2 * x[38] - 2 * x[44], 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[39] - 2 * x[42] - 2 * x[65], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0,
         0, 0, 0, -2 * x[33] + 2 * x[39] - 2 * x[65], 2 * x[39] - 2 * x[45] - 2 * x[65], 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[40] - 2 * x[43] + 2 * x[66], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0,
         0, 0, 0, -2 * x[34] + 2 * x[40], 2 * x[40] - 2 * x[46], 0, 0, 0],
        [0, 0, 0, 0, 0, 2 * x[41] - 2 * x[53], -2 * x[35] + 2 * x[41], 0, 0, -2 * x[38] + 2 * x[41], 0, 0, 0, 0, 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 2 * x[42] - 2 * x[54], -2 * x[36] + 2 * x[42], 0, 0, -2 * x[39] + 2 * x[42] + 2 * x[65], 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 2 * x[43] - 2 * x[55], -2 * x[37] + 2 * x[43], 0, 0, -2 * x[40] + 2 * x[43] - 2 * x[66], 0, 0,
         0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[44] - 2 * x[59],
         0, 0,
         -2 * x[38] + 2 * x[44], -2 * x[29] + 2 * x[44], 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[45] - 2 * x[60],
         0, 0,
         -2 * x[39] + 2 * x[45] + 2 * x[65], -2 * x[30] + 2 * x[45], 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * x[46] - 2 * x[61] + 2 * x[66], 0, 0, -2 * x[40] + 2 * x[46], -2 * x[31] + 2 * x[46], 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * delta - 2 * x[20] + 2 * x[47], 0, 0,
         -2 * delta - 2 * x[32] + 2 * x[47], -2 * delta + 2 * x[47] - 2 * x[56], 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[21] + 2 * x[48] + 2 * x[65], 0, 0,
         -2 * x[33] + 2 * x[48], 2 * x[48] - 2 * x[57], 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[22] + 2 * x[49], 0, 0,
         -2 * x[34] + 2 * x[49], 2 * x[49] - 2 * x[58], 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[23] + 2 * x[50], 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[50] - 2 * x[62], 0,
         -2 * x[35] + 2 * x[50], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[24] + 2 * x[51], 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[51] - 2 * x[63], 0,
         -2 * x[36] + 2 * x[51] - 2 * x[65], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[25] + 2 * x[52], 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[52] - 2 * x[64], 0,
         -2 * x[37] + 2 * x[52], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, -2 * x[41] + 2 * x[53], 0, -2 * x[26] + 2 * x[53], -2 * x[17] + 2 * x[53], 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, -2 * x[42] + 2 * x[54], 0, -2 * x[27] + 2 * x[54], -2 * x[18] + 2 * x[54] + 2 * x[65], 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, -2 * x[43] + 2 * x[55], 0, -2 * x[28] + 2 * x[55], -2 * x[19] + 2 * x[55], 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * delta - 2 * x[47] + 2 * x[56], 0,
         2 * x[56] - 2 * x[59], 0, -2 * x[14] + 2 * x[56], 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[48] + 2 * x[57], 0,
         2 * x[57] - 2 * x[60], 0, -2 * x[15] + 2 * x[57], 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[49] + 2 * x[58], 0,
         2 * x[58] - 2 * x[61] + 2 * x[66], 0, -2 * x[16] + 2 * x[58], 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         2 * delta - 2 * x[11] + 2 * x[59],
         -2 * x[56] + 2 * x[59], -2 * x[44] + 2 * x[59], 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[12] + 2 * x[60],
         -2 * x[57] + 2 * x[60], -2 * x[45] + 2 * x[60], 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         -2 * x[13] + 2 * x[61] - 2 * x[66], -2 * x[58] + 2 * x[61] - 2 * x[66], -2 * x[46] + 2 * x[61] - 2 * x[66], 0,
         0,
         0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * delta + 2 * x[62] - 2 * x[8], 0, 0, 0, 0, -2 * x[20] + 2 * x[62],
         0,
         -2 * x[50] + 2 * x[62], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 * x[63] - 2 * x[9], 0, 0, 0, 0, -2 * x[21] + 2 * x[63], 0,
         -2 * x[51] + 2 * x[63], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2 * x[10] + 2 * x[64], 0, 0, 0, 0, -2 * x[22] + 2 * x[64], 0,
         -2 * x[52] + 2 * x[64], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, -2 * x[18] + 2 * x[54] + 2 * x[65], -2 * x[39] + 2 * x[42] + 2 * x[65], 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, -2 * x[21] + 2 * x[48] + 2 * x[65], 2 * x[36] - 2 * x[51] + 2 * x[65], 0, 0, 0, 0, 0, 0, 0,
         2 * x[33] - 2 * x[39] + 2 * x[65], -2 * x[39] + 2 * x[45] + 2 * x[65], 0, 0, 0],
        [0, 2 * x[2] + 2 * x[66] - 1.5, 0, 0, 0, 0, 0, 0, 0, 2 * x[40] - 2 * x[43] + 2 * x[66], 0, 0, 0, 0, 0, 0, 0, 0,
         0,
         0, 0, 0, 0, 0, 0, 0, 0, 2 * x[13] - 2 * x[61] + 2 * x[66], 2 * x[58] - 2 * x[61] + 2 * x[66],
         2 * x[46] - 2 * x[61] + 2 * x[66], 0, 0, 0, 0, -2 * x[28] + 2 * x[31] + 2 * x[66], 0]]
    return np.matrix(df).T

def f_energy(x):
    e =x[65]*(x[13]**2 + x[20]**2 + x[2]**2 + x[33]**2 + x[40]**2 + x[42]**2 + x[46]**2 + x[48]**2 + x[54]**2 + x[56]**2 + x[59]**2 + x[62]**2 + (x[0] - 0.75)**2 + (x[10] - 0.5)**2 + (x[11] - 0.75)**2 + (x[12] - 0.1)**2 + (x[14] - 0.15)**2 + (x[15] - 0.5)**2 + (x[16] - 0.25)**2 + (x[17] - 0.5)**2 + (x[18] - 0.75)**2 + (x[19] - 0.9)**2 + (x[1] - 0.65)**2 + (x[21] - 0.75)**2 + (x[22] - 0.1)**2 + (x[23] - 0.5)**2 + (x[24] - 0.75)**2 + (x[25] - 0.35)**2 + (x[26] - 0.5)**2 + (x[27] - 0.25)**2 + (x[28] - 0.6)**2 + (x[29] - 0.5)**2 + (x[30] - 0.25)**2 + (x[31] - 0.15)**2 + (x[32] - 0.4)**2 + (x[34] - 0.25)**2 + (x[35] - 0.25)**2 + (x[36] - 0.15)**2 + (x[37] - 0.5)**2 + (x[38] - 0.25)**2 + (x[39] - 0.85)**2 + (x[3] - 0.6)**2 + (x[41] - 0.1)**2 + (x[43] - 0.75)**2 + (x[44] - 0.25)**2 + (x[45] - 0.4)**2 + (x[47] - 0.85)**2 + (x[49] - 0.25)**2 + (x[4] - 0.25)**2 + (x[50] - 0.25)**2 + (x[51] - 0.6)**2 + (x[52] - 0.5)**2 + (x[53] - 0.65)**2 + (x[55] - 0.75)**2 + (x[57] - 0.25)**2 + (x[58] - 0.4)**2 + (x[5] - 0.75)**2 + (x[60] - 0.25)**2 + (x[61] - 0.85)**2 + (x[63] - 0.75)**2 + (x[64] - 0.65)**2 + (x[6] - 0.35)**2 + (x[7] - 0.5)**2 + (x[8] - 0.75)**2 + (x[9] - 0.9)**2) + ((-x[0] + 0.9)**2 + (-x[1] + 0.5)**2 + (-x[2] - 0.25)**2 - 0.1075)**2 + ((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025)**2 + ((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075)**2 + ((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025)**2 + ((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075)**2 + ((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075)**2 + ((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075)**2 + ((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075)**2 + ((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075)**2 + ((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075)**2 + ((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025)**2 + ((-x[17] + 0.35)**2 + (-x[18] + 0.5)**2 + (-x[19] + 0.75)**2 - 0.1075)**2 + ((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025)**2 + ((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075)**2 + ((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025)**2 + ((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075)**2 + ((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075)**2 + ((-x[26] + 0.35)**2 + (-x[27] + 0.5)**2 + (-x[28] + 0.75)**2 - 0.1075)**2 + ((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025)**2 + ((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075)**2 + ((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075)**2 + ((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075)**2 + ((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075)**2 + ((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025)**2 + ((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075)**2 + ((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025)**2 + ((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075)**2 + ((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025)**2 + ((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075)**2 + ((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025)**2 + ((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075)**2 + ((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075)**2 + ((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075)**2 + ((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025)**2 + ((-x[5] + 0.9)**2 + (-x[6] + 0.5)**2 + (-x[7] + 0.75)**2 - 0.1075)**2 + 3.08148791101958e-33
    return e

def gradient(x):
    deriv =[x[65]*(2*x[0] - 1.5) + (4*x[0] - 3.6)*((-x[0] + 0.9)**2 + (-x[1] + 0.5)**2 + (-x[2] - 0.25)**2 - 0.1075) + (4*x[0] - 4*x[11])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[0] - 4*x[3])*((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075), x[65]*(2*x[1] - 1.3) + (-4*x[12] + 4*x[1])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[1] - 2.0)*((-x[0] + 0.9)**2 + (-x[1] + 0.5)**2 + (-x[2] - 0.25)**2 - 0.1075) + (4*x[1] - 2.0)*((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075), 2*x[2]*x[65] + (-4*x[13] + 4*x[2])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[2] + 1.0)*((-x[0] + 0.9)**2 + (-x[1] + 0.5)**2 + (-x[2] - 0.25)**2 - 0.1075) + (4*x[2] - 4*x[4])*((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075), x[65]*(2*x[3] - 1.2) + (-4*x[0] + 4*x[3])*((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075) + (4*x[3] - 4*x[5])*((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075) + (-4*delta - 4*x[14] + 4*x[3])*((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025), x[65]*(2*x[4] - 0.5) + (-4*x[16] + 4*x[4])*((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025) + (-4*x[2] + 4*x[4])*((x[0] - x[3])**2 + (x[1] - 0.5)**2 + (x[2] - x[4])**2 - 0.1075) + (4*x[4] - 4*x[7])*((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075), x[65]*(2*x[5] - 1.5) + (-4*x[3] + 4*x[5])*((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075) + (4*x[5] - 3.6)*((-x[5] + 0.9)**2 + (-x[6] + 0.5)**2 + (-x[7] + 0.75)**2 - 0.1075) + (4*x[5] - 4*x[8])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025), x[65]*(2*x[6] - 0.7) + (4*x[6] - 2.0)*((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075) + (4*x[6] - 2.0)*((-x[5] + 0.9)**2 + (-x[6] + 0.5)**2 + (-x[7] + 0.75)**2 - 0.1075) + (4*x[6] - 4*x[9])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025), x[65]*(2*x[7] - 1.0) + (-4*x[10] + 4*x[7])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025) + (-4*x[4] + 4*x[7])*((x[3] - x[5])**2 + (x[4] - x[7])**2 + (-x[6] + 0.5)**2 - 0.1075) + (4*x[7] - 3.0)*((-x[5] + 0.9)**2 + (-x[6] + 0.5)**2 + (-x[7] + 0.75)**2 - 0.1075), x[65]*(2*x[8] - 1.5) + (-4*x[23] + 4*x[8])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075) + (-4*x[5] + 4*x[8])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025) + (-4*delta - 4*x[62] + 4*x[8])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075), x[65]*(2*x[9] - 1.8) + (-4*x[24] + 4*x[9])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075) + (-4*x[63] + 4*x[9])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075) + (-4*x[6] + 4*x[9])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025), x[65]*(2*x[10] - 1.0) + (4*x[10] - 4*x[25])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075) + (4*x[10] - 4*x[64])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075) + (4*x[10] - 4*x[7])*((-x[10] + x[7])**2 + (x[5] - x[8])**2 + (x[6] - x[9])**2 - 0.3025), x[65]*(2*x[11] - 1.5) + (-4*x[0] + 4*x[11])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[11] - 4*x[29])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (-4*delta + 4*x[11] - 4*x[59])*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075), x[65]*(2*x[12] - 0.2) + (4*x[12] - 4*x[1])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[12] - 4*x[30])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (4*x[12] - 4*x[60])*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075), 2*x[13]*x[65] + (4*x[13] - 4*x[2])*((x[0] - x[11])**2 + (-x[12] + x[1])**2 + (-x[13] + x[2])**2 - 0.3025) + (4*x[13] - 4*x[31])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (4*x[13] - 4*x[61] + 4)*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075), x[65]*(2*x[14] - 0.3) + (4*x[14] - 4*x[20])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[14] - 4*x[56])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075) + (4*delta + 4*x[14] - 4*x[3])*((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025), x[65]*(2*x[15] - 1.0) + (4*x[15] - 2.0)*((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025) + (4*x[15] - 4*x[21])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[15] - 4*x[57])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075), x[65]*(2*x[16] - 0.5) + (4*x[16] - 4*x[22])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[16] - 4*x[4])*((-x[15] + 0.5)**2 + (-x[16] + x[4])**2 + (-delta - x[14] + x[3])**2 - 0.3025) + (4*x[16] - 4*x[58])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075), x[65]*(2*x[17] - 1.0) + (4*x[17] - 1.4)*((-x[17] + 0.35)**2 + (-x[18] + 0.5)**2 + (-x[19] + 0.75)**2 - 0.1075) + (4*x[17] - 4*x[23])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[17] - 4*x[53])*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075), x[65]*(2*x[18] - 1.5) + (4*x[18] - 2.0)*((-x[17] + 0.35)**2 + (-x[18] + 0.5)**2 + (-x[19] + 0.75)**2 - 0.1075) + (4*x[18] - 4*x[24])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[18] - 4*x[54] - 4)*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075), x[65]*(2*x[19] - 1.8) + (4*x[19] - 3.0)*((-x[17] + 0.35)**2 + (-x[18] + 0.5)**2 + (-x[19] + 0.75)**2 - 0.1075) + (4*x[19] - 4*x[25])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[19] - 4*x[55])*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075), 2*x[20]*x[65] + (-4*x[14] + 4*x[20])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[20] - 4*x[62])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025) + (4*delta + 4*x[20] - 4*x[47])*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075), x[65]*(2*x[21] - 1.5) + (-4*x[15] + 4*x[21])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[21] - 4*x[63])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025) + (4*x[21] - 4*x[48] - 4)*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075), x[65]*(2*x[22] - 0.2) + (-4*x[16] + 4*x[22])*((x[14] - x[20])**2 + (x[15] - x[21])**2 + (x[16] - x[22])**2 - 0.1075) + (4*x[22] - 4*x[49])*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075) + (4*x[22] - 4*x[64])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025), x[65]*(2*x[23] - 1.0) + (-4*x[17] + 4*x[23])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[23] - 4*x[50])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075) + (4*x[23] - 4*x[8])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075), x[65]*(2*x[24] - 1.5) + (-4*x[18] + 4*x[24])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[24] - 4*x[51])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075) + (4*x[24] - 4*x[9])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075), x[65]*(2*x[25] - 0.7) + (-4*x[10] + 4*x[25])*((x[10] - x[25])**2 + (-x[23] + x[8])**2 + (-x[24] + x[9])**2 - 0.1075) + (-4*x[19] + 4*x[25])*((x[17] - x[23])**2 + (x[18] - x[24])**2 + (x[19] - x[25])**2 - 0.3025) + (4*x[25] - 4*x[52])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075), x[65]*(2*x[26] - 1.0) + (4*x[26] - 1.4)*((-x[26] + 0.35)**2 + (-x[27] + 0.5)**2 + (-x[28] + 0.75)**2 - 0.1075) + (4*x[26] - 4*x[29])*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025) + (4*x[26] - 4*x[53])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075), x[65]*(2*x[27] - 0.5) + (4*x[27] - 2.0)*((-x[26] + 0.35)**2 + (-x[27] + 0.5)**2 + (-x[28] + 0.75)**2 - 0.1075) + (4*x[27] - 4*x[30])*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025) + (4*x[27] - 4*x[54])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075), x[65]*(2*x[28] - 1.2) + (4*x[28] - 3.0)*((-x[26] + 0.35)**2 + (-x[27] + 0.5)**2 + (-x[28] + 0.75)**2 - 0.1075) + (4*x[28] - 4*x[55])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075) + (4*x[28] - 4*x[31] - 4)*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025), x[65]*(2*x[29] - 1.0) + (-4*x[11] + 4*x[29])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (-4*x[26] + 4*x[29])*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025) + (4*x[29] - 4*x[44])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075), x[65]*(2*x[30] - 0.5) + (-4*x[12] + 4*x[30])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (-4*x[27] + 4*x[30])*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025) + (4*x[30] - 4*x[45])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075), x[65]*(2*x[31] - 0.3) + (-4*x[13] + 4*x[31])*((x[11] - x[29])**2 + (x[12] - x[30])**2 + (x[13] - x[31])**2 - 0.1075) + (4*x[31] - 4*x[46])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075) + (-4*x[28] + 4*x[31] + 4)*((x[26] - x[29])**2 + (x[27] - x[30])**2 + (x[28] - x[31] - 1)**2 - 0.3025), x[65]*(2*x[32] - 0.8) + (4*x[32] - 4*x[35])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[32] - 4*x[38])*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075) + (4*delta + 4*x[32] - 4*x[47])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025), 2*x[33]*x[65] + (4*x[33] - 4*x[36])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[33] - 4*x[48])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025) + (4*x[33] - 4*x[39] + 4)*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075), x[65]*(2*x[34] - 0.5) + (4*x[34] - 4*x[37])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[34] - 4*x[40])*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075) + (4*x[34] - 4*x[49])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025), x[65]*(2*x[35] - 0.5) + (-4*x[32] + 4*x[35])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[35] - 4*x[41])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (4*x[35] - 4*x[50])*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025), x[65]*(2*x[36] - 0.3) + (-4*x[33] + 4*x[36])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[36] - 4*x[42])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (4*x[36] - 4*x[51] + 4)*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025), x[65]*(2*x[37] - 1.0) + (-4*x[34] + 4*x[37])*((x[32] - x[35])**2 + (x[33] - x[36])**2 + (x[34] - x[37])**2 - 0.1075) + (4*x[37] - 4*x[43])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (4*x[37] - 4*x[52])*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025), x[65]*(2*x[38] - 0.5) + (-4*x[32] + 4*x[38])*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075) + (4*x[38] - 4*x[41])*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075) + (4*x[38] - 4*x[44])*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025), x[65]*(2*x[39] - 1.7) + (-4*x[33] + 4*x[39] - 4)*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075) + (4*x[39] - 4*x[42] - 4)*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075) + (4*x[39] - 4*x[45] - 4)*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025), 2*x[40]*x[65] + (-4*x[34] + 4*x[40])*((-x[32] + x[38])**2 + (-x[34] + x[40])**2 + (-x[33] + x[39] - 1)**2 - 0.1075) + (4*x[40] - 4*x[46])*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025) + (4*x[40] - 4*x[43] + 4)*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075), x[65]*(2*x[41] - 0.2) + (-4*x[35] + 4*x[41])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (-4*x[38] + 4*x[41])*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075) + (4*x[41] - 4*x[53])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025), 2*x[42]*x[65] + (-4*x[36] + 4*x[42])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (4*x[42] - 4*x[54])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025) + (-4*x[39] + 4*x[42] + 4)*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075), x[65]*(2*x[43] - 1.5) + (-4*x[37] + 4*x[43])*((x[35] - x[41])**2 + (x[36] - x[42])**2 + (x[37] - x[43])**2 - 0.1075) + (4*x[43] - 4*x[55])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025) + (-4*x[40] + 4*x[43] - 4)*((-x[38] + x[41])**2 + (-x[39] + x[42] + 1)**2 + (-x[40] + x[43] - 1)**2 - 0.1075), x[65]*(2*x[44] - 0.5) + (-4*x[29] + 4*x[44])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075) + (-4*x[38] + 4*x[44])*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025) + (4*x[44] - 4*x[59])*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075), x[65]*(2*x[45] - 0.8) + (-4*x[30] + 4*x[45])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075) + (4*x[45] - 4*x[60])*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075) + (-4*x[39] + 4*x[45] + 4)*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025), 2*x[46]*x[65] + (-4*x[31] + 4*x[46])*((x[29] - x[44])**2 + (x[30] - x[45])**2 + (x[31] - x[46])**2 - 0.1075) + (-4*x[40] + 4*x[46])*((x[38] - x[44])**2 + (x[40] - x[46])**2 + (x[39] - x[45] - 1)**2 - 0.3025) + (4*x[46] - 4*x[61] + 4)*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075), x[65]*(2*x[47] - 1.7) + (-4*delta - 4*x[20] + 4*x[47])*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075) + (-4*delta - 4*x[32] + 4*x[47])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025) + (-4*delta + 4*x[47] - 4*x[56])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075), 2*x[48]*x[65] + (-4*x[33] + 4*x[48])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025) + (4*x[48] - 4*x[57])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075) + (-4*x[21] + 4*x[48] + 4)*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075), x[65]*(2*x[49] - 0.5) + (-4*x[22] + 4*x[49])*((-x[22] + x[49])**2 + (-delta - x[20] + x[47])**2 + (-x[21] + x[48] + 1)**2 - 0.1075) + (-4*x[34] + 4*x[49])*((x[33] - x[48])**2 + (x[34] - x[49])**2 + (delta + x[32] - x[47])**2 - 0.3025) + (4*x[49] - 4*x[58])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075), x[65]*(2*x[50] - 0.5) + (-4*x[23] + 4*x[50])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075) + (-4*x[35] + 4*x[50])*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025) + (4*x[50] - 4*x[62])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075), x[65]*(2*x[51] - 1.2) + (-4*x[24] + 4*x[51])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075) + (4*x[51] - 4*x[63])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075) + (-4*x[36] + 4*x[51] - 4)*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025), x[65]*(2*x[52] - 1.0) + (-4*x[25] + 4*x[52])*((x[23] - x[50])**2 + (x[24] - x[51])**2 + (x[25] - x[52])**2 - 0.1075) + (-4*x[37] + 4*x[52])*((x[35] - x[50])**2 + (x[37] - x[52])**2 + (x[36] - x[51] + 1)**2 - 0.3025) + (4*x[52] - 4*x[64])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075), x[65]*(2*x[53] - 1.3) + (-4*x[17] + 4*x[53])*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075) + (-4*x[26] + 4*x[53])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075) + (-4*x[41] + 4*x[53])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025), 2*x[54]*x[65] + (-4*x[27] + 4*x[54])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075) + (-4*x[42] + 4*x[54])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025) + (-4*x[18] + 4*x[54] + 4)*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075), x[65]*(2*x[55] - 1.5) + (-4*x[19] + 4*x[55])*((x[17] - x[53])**2 + (x[19] - x[55])**2 + (x[18] - x[54] - 1)**2 - 0.1075) + (-4*x[28] + 4*x[55])*((x[26] - x[53])**2 + (x[27] - x[54])**2 + (x[28] - x[55])**2 - 0.1075) + (-4*x[43] + 4*x[55])*((x[41] - x[53])**2 + (x[42] - x[54])**2 + (x[43] - x[55])**2 - 0.3025), 2*x[56]*x[65] + (-4*x[14] + 4*x[56])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075) + (4*x[56] - 4*x[59])*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025) + (4*delta - 4*x[47] + 4*x[56])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075), x[65]*(2*x[57] - 0.5) + (-4*x[15] + 4*x[57])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075) + (-4*x[48] + 4*x[57])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075) + (4*x[57] - 4*x[60])*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025), x[65]*(2*x[58] - 0.8) + (-4*x[16] + 4*x[58])*((x[14] - x[56])**2 + (x[15] - x[57])**2 + (x[16] - x[58])**2 - 0.1075) + (-4*x[49] + 4*x[58])*((-x[48] + x[57])**2 + (-x[49] + x[58])**2 + (delta - x[47] + x[56])**2 - 0.1075) + (4*x[58] - 4*x[61] + 4)*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025), 2*x[59]*x[65] + (-4*x[44] + 4*x[59])*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075) + (-4*x[56] + 4*x[59])*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025) + (4*delta - 4*x[11] + 4*x[59])*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075), x[65]*(2*x[60] - 0.5) + (-4*x[12] + 4*x[60])*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075) + (-4*x[45] + 4*x[60])*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075) + (-4*x[57] + 4*x[60])*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025), x[65]*(2*x[61] - 1.7) + (-4*x[13] + 4*x[61] - 4)*((x[12] - x[60])**2 + (-delta + x[11] - x[59])**2 + (x[13] - x[61] + 1)**2 - 0.1075) + (-4*x[46] + 4*x[61] - 4)*((x[44] - x[59])**2 + (x[45] - x[60])**2 + (x[46] - x[61] + 1)**2 - 0.1075) + (-4*x[58] + 4*x[61] - 4)*((x[56] - x[59])**2 + (x[57] - x[60])**2 + (x[58] - x[61] + 1)**2 - 0.3025), 2*x[62]*x[65] + (-4*x[20] + 4*x[62])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025) + (-4*x[50] + 4*x[62])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075) + (4*delta + 4*x[62] - 4*x[8])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075), x[65]*(2*x[63] - 1.5) + (-4*x[21] + 4*x[63])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025) + (-4*x[51] + 4*x[63])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075) + (4*x[63] - 4*x[9])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075), x[65]*(2*x[64] - 1.3) + (-4*x[10] + 4*x[64])*((x[10] - x[64])**2 + (-x[63] + x[9])**2 + (-delta - x[62] + x[8])**2 - 0.1075) + (-4*x[22] + 4*x[64])*((x[20] - x[62])**2 + (x[21] - x[63])**2 + (x[22] - x[64])**2 - 0.3025) + (-4*x[52] + 4*x[64])*((x[50] - x[62])**2 + (x[51] - x[63])**2 + (x[52] - x[64])**2 - 0.1075), x[13]**2 + x[20]**2 + x[2]**2 + x[33]**2 + x[40]**2 + x[42]**2 + x[46]**2 + x[48]**2 + x[54]**2 + x[56]**2 + x[59]**2 + x[62]**2 + (x[0] - 0.75)**2 + (x[10] - 0.5)**2 + (x[11] - 0.75)**2 + (x[12] - 0.1)**2 + (x[14] - 0.15)**2 + (x[15] - 0.5)**2 + (x[16] - 0.25)**2 + (x[17] - 0.5)**2 + (x[18] - 0.75)**2 + (x[19] - 0.9)**2 + (x[1] - 0.65)**2 + (x[21] - 0.75)**2 + (x[22] - 0.1)**2 + (x[23] - 0.5)**2 + (x[24] - 0.75)**2 + (x[25] - 0.35)**2 + (x[26] - 0.5)**2 + (x[27] - 0.25)**2 + (x[28] - 0.6)**2 + (x[29] - 0.5)**2 + (x[30] - 0.25)**2 + (x[31] - 0.15)**2 + (x[32] - 0.4)**2 + (x[34] - 0.25)**2 + (x[35] - 0.25)**2 + (x[36] - 0.15)**2 + (x[37] - 0.5)**2 + (x[38] - 0.25)**2 + (x[39] - 0.85)**2 + (x[3] - 0.6)**2 + (x[41] - 0.1)**2 + (x[43] - 0.75)**2 + (x[44] - 0.25)**2 + (x[45] - 0.4)**2 + (x[47] - 0.85)**2 + (x[49] - 0.25)**2 + (x[4] - 0.25)**2 + (x[50] - 0.25)**2 + (x[51] - 0.6)**2 + (x[52] - 0.5)**2 + (x[53] - 0.65)**2 + (x[55] - 0.75)**2 + (x[57] - 0.25)**2 + (x[58] - 0.4)**2 + (x[5] - 0.75)**2 + (x[60] - 0.25)**2 + (x[61] - 0.85)**2 + (x[63] - 0.75)**2 + (x[64] - 0.65)**2 + (x[6] - 0.35)**2 + (x[7] - 0.5)**2 + (x[8] - 0.75)**2 + (x[9] - 0.9)**2]

    return deriv
